/* soapautentificaHuellaProxy.cpp
   Generated by gSOAP 2.8.55 for ah.h

gSOAP XML Web services tools
Copyright (C) 2000-2017, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include "soapautentificaHuellaProxy.h"

autentificaHuellaProxy::autentificaHuellaProxy() : soap(SOAP_IO_DEFAULT)
{	autentificaHuellaProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

autentificaHuellaProxy::autentificaHuellaProxy(const autentificaHuellaProxy& rhs)
{	soap_copy_context(this, &rhs);
	this->soap_endpoint = rhs.soap_endpoint;
}

autentificaHuellaProxy::autentificaHuellaProxy(const struct soap &_soap) : soap(_soap)
{ }

autentificaHuellaProxy::autentificaHuellaProxy(const char *endpoint) : soap(SOAP_IO_DEFAULT)
{	autentificaHuellaProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = endpoint;
}

autentificaHuellaProxy::autentificaHuellaProxy(soap_mode iomode) : soap(iomode)
{	autentificaHuellaProxy_init(iomode, iomode);
}

autentificaHuellaProxy::autentificaHuellaProxy(const char *endpoint, soap_mode iomode) : soap(iomode)
{	autentificaHuellaProxy_init(iomode, iomode);
	soap_endpoint = endpoint;
}

autentificaHuellaProxy::autentificaHuellaProxy(soap_mode imode, soap_mode omode) : soap(imode, omode)
{	autentificaHuellaProxy_init(imode, omode);
}

autentificaHuellaProxy::~autentificaHuellaProxy()
{
	this->destroy();
	}

void autentificaHuellaProxy::autentificaHuellaProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] = {
        {"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
        {"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
        {"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
        {"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
        {"ns2", "aos:autentificaHuella", NULL, NULL},
        {"ns3", "http://coppel.com/ecommerce/ValidacionDeCorreosArg", NULL, NULL},
        {NULL, NULL, NULL, NULL}
    };
	soap_set_namespaces(this, namespaces);
}

autentificaHuellaProxy *autentificaHuellaProxy::copy()
{	autentificaHuellaProxy *dup = SOAP_NEW_COPY(autentificaHuellaProxy(*(struct soap*)this));
	return dup;
}

autentificaHuellaProxy& autentificaHuellaProxy::operator=(const autentificaHuellaProxy& rhs)
{	soap_copy_context(this, &rhs);
	this->soap_endpoint = rhs.soap_endpoint;
	return *this;
}

void autentificaHuellaProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void autentificaHuellaProxy::reset()
{	this->destroy();
	soap_done(this);
	soap_initialize(this);
	autentificaHuellaProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void autentificaHuellaProxy::soap_noheader()
{	this->header = NULL;
}

::SOAP_ENV__Header *autentificaHuellaProxy::soap_header()
{	return this->header;
}

::SOAP_ENV__Fault *autentificaHuellaProxy::soap_fault()
{	return this->fault;
}

const char *autentificaHuellaProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *autentificaHuellaProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int autentificaHuellaProxy::soap_close_socket()
{	return soap_closesock(this);
}

int autentificaHuellaProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void autentificaHuellaProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void autentificaHuellaProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *autentificaHuellaProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int autentificaHuellaProxy::ConsultaCliente(const char *endpoint, const char *soap_action, ns2__entrada *entradaCliente, char *num_respuesta)
{	struct soap *soap = this;
	struct ns2__ConsultaCliente soap_tmp_ns2__ConsultaCliente;
	struct ns2__ConsultaClienteResponse *soap_tmp_ns2__ConsultaClienteResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.44.4.209:20622/soa/autentificaHuella/autentificaHuella.cgi";
	if (soap_action == NULL)
		soap_action = "ConsultaCliente";
	soap_tmp_ns2__ConsultaCliente.entradaCliente = entradaCliente;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns2__ConsultaCliente(soap, &soap_tmp_ns2__ConsultaCliente);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns2__ConsultaCliente(soap, &soap_tmp_ns2__ConsultaCliente, "ns2:ConsultaCliente", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns2__ConsultaCliente(soap, &soap_tmp_ns2__ConsultaCliente, "ns2:ConsultaCliente", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	//num_respuesta = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns2__ConsultaClienteResponse = soap_get_ns2__ConsultaClienteResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns2__ConsultaClienteResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	//num_respuesta = soap_tmp_ns2__ConsultaClienteResponse->num_respuesta;
	sprintf( num_respuesta, "%s", soap_tmp_ns2__ConsultaClienteResponse->num_respuesta );
	return soap_closesock(soap);
}

int autentificaHuellaProxy::ConsultaEmpleado(const char *endpoint, const char *soap_action, ns2__entrada *entradaEmpleado, char *num_respuesta)
{	struct soap *soap = this;
	struct ns2__ConsultaEmpleado soap_tmp_ns2__ConsultaEmpleado;
	struct ns2__ConsultaEmpleadoResponse *soap_tmp_ns2__ConsultaEmpleadoResponse;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.44.4.209:20622/soa/autentificaHuella/autentificaHuella.cgi";
	if (soap_action == NULL)
		soap_action = "ConsultaEmpleado";
	soap_tmp_ns2__ConsultaEmpleado.entradaEmpleado = entradaEmpleado;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns2__ConsultaEmpleado(soap, &soap_tmp_ns2__ConsultaEmpleado);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns2__ConsultaEmpleado(soap, &soap_tmp_ns2__ConsultaEmpleado, "ns2:ConsultaEmpleado", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns2__ConsultaEmpleado(soap, &soap_tmp_ns2__ConsultaEmpleado, "ns2:ConsultaEmpleado", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	//num_respuesta = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_tmp_ns2__ConsultaEmpleadoResponse = soap_get_ns2__ConsultaEmpleadoResponse(soap, NULL, "", NULL);
	if (!soap_tmp_ns2__ConsultaEmpleadoResponse || soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	//num_respuesta = soap_tmp_ns2__ConsultaEmpleadoResponse->num_respuesta;
	sprintf( num_respuesta, "%s", soap_tmp_ns2__ConsultaEmpleadoResponse->num_respuesta );

	return soap_closesock(soap);
}

int autentificaHuellaProxy::Cliente(const char *endpoint, const char *soap_action, ns2__entrada *entradaCliente, struct ns2__ClienteResponse &_param_1)
{	struct soap *soap = this;
	struct ns2__Cliente soap_tmp_ns2__Cliente;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.44.4.209:20622/soa/autentificaHuella/autentificaHuella.cgi";
	if (soap_action == NULL)
		soap_action = "Cliente";
	soap_tmp_ns2__Cliente.entradaCliente = entradaCliente;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns2__Cliente(soap, &soap_tmp_ns2__Cliente);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns2__Cliente(soap, &soap_tmp_ns2__Cliente, "ns2:Cliente", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns2__Cliente(soap, &soap_tmp_ns2__Cliente, "ns2:Cliente", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns2__ClienteResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns2__ClienteResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns2__ClienteResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int autentificaHuellaProxy::Empleado(const char *endpoint, const char *soap_action, ns2__entrada *entradaEmpleado, struct ns2__EmpleadoResponse &_param_1)
{	struct soap *soap = this;
	struct ns2__Empleado soap_tmp_ns2__Empleado;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.44.4.209:20622/soa/autentificaHuella/autentificaHuella.cgi";
	if (soap_action == NULL)
		soap_action = "Empleado";
	soap_tmp_ns2__Empleado.entradaEmpleado = entradaEmpleado;
	soap_begin(soap);
	soap->encodingStyle = "http://schemas.xmlsoap.org/soap/encoding/";
	soap_serializeheader(soap);
	soap_serialize_ns2__Empleado(soap, &soap_tmp_ns2__Empleado);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns2__Empleado(soap, &soap_tmp_ns2__Empleado, "ns2:Empleado", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns2__Empleado(soap, &soap_tmp_ns2__Empleado, "ns2:Empleado", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!static_cast<struct ns2__EmpleadoResponse*>(&_param_1)) // NULL ref?
		return soap_closesock(soap);
	soap_default_ns2__EmpleadoResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	if (soap_recv_fault(soap, 1))
		return soap->error;
	soap_get_ns2__EmpleadoResponse(soap, &_param_1, "", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
